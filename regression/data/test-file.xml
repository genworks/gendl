 <?xml version="1.0" encoding="utf-8"?>
<gdlxml package="gdl-user">
  <define-object name="table">
    <documentation author="Dave Cooper" description="Models a table with four box-shaped legs" />
    <mixins>
      <mixin name="surf:box-solid" />
    </mixins>
    <slots>
      <slot section-key="input-slots" keyword="top-height-ratio" default="0.05" settable="settable" />
      <slot section-key="input-slots" keyword="width" default="10" />
      <slot section-key="input-slots" keyword="length" default="(* (the width) +phi+)" remark-string="Number. Length of entire table in Y direction." />
      <slot section-key="input-slots" keyword="height" default="5" />
      <slot section-key="input-slots" keyword="serial-number" />
      <slot section-key="functions" keyword="cost" default="((format t &quot;Computing the cost...~%&quot;) (* unit-price (the length) (the width) (the height)))" argument-list="(unit-price)" remark-string="Number. Rough cost estimate, this is here just as an example function for xml conversion testing." />
      <slot section-key="objects" keyword="platform" type="'table-platform">
        <inputs>
          <input keyword="center" default="(translate (the gdl-user::center) :up (half (- (the gdl-user::height) (the-child gdl-user::height))))" />
          <input keyword="display-controls" default="(list :color :green)" />
          <input keyword="height" default="(* (the gdl-user::top-height-ratio) (the gdl-user::height))" />
        </inputs>
      </slot>
      <slot section-key="objects" keyword="legs" type="'table-leg" sequence="(:size 4)">
        <inputs>
          <input keyword="platform-mass" default="(the gdl-user::platform gdl-user::mass)" />
          <input keyword="width" default="(* 0.05 (the gdl-user::width))" />
          <input keyword="length" default="(* 0.05 (the length))" />
          <input keyword="height" default="(- (the gdl-user::height) (the gdl-user::platform gdl-user::height))" />
          <input keyword="center" default="(translate (the gdl-user::center) :down (half (the gdl-user::platform gdl-user::height)) :left            (ecase (the-child gdl-user::index)              ((0 1) (half (- (the gdl-user::width) (the-child gdl-user::width))))              ((2 3) (- (half (- (the gdl-user::width) (the-child gdl-user::width))))))            :rear            (ecase (the-child gdl-user::index) ((0 2) (half (- (the length) (the-child length)))) ((1 3) (- (half (- (the length) (the-child length)))))))" />
        </inputs>
      </slot>
    </slots>
  </define-object>
</gdlxml>
