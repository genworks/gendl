@subsubsection Revolved-surfaces

@b{Description}

Creates a set of surfaces of revolution based on a list of arbitrary NURBS curves revolved by some angle about
a central axis and axis point.

@noindent @b{Required-input-slots}

@b{:curves}

@itemize {}

 @item List of GDL Curve objects. The profiles to be revolved.

@end itemize

@noindent @b{Optional-input-slots}

@b{:arc}

@itemize {}

 @item Angle in radians. The amount to revolve. Default is twice pi (a full circle of revolution).

@end itemize

@b{:axis-point}

@itemize {}

 @item 3D Point. The center of revolution. Default value is the center.

@end itemize

@b{:axis-vector}

@itemize {}

 @item 3D Vector. The direction of axis of revolution. Default is the top of the reference box.

@end itemize

@noindent @b{Quantified-objects}

@b{:surfaces}

@itemize {}

 @item Sequence of GDL Surfaces. The resultant revolved surfaces.

@end itemize

@noindent @b{Examples}

@smallexample 
@cartouche

 (in-package :gdl-user)

 (define-object test-revolved-surfaces (revolved-surfaces)

   :computed-slots ((curves (list (the curve-1) (the curve-2))))
   
   :hidden-objects ((curve-1 :type 'arc-curve
                             :center (translate (the center) :right 50)
                             :orientation (alignment :top (the (face-normal-vector :rear)))
                             :start-angle 0
                             :end-angle (/ pi 4)
                             :radius 10)
                    
                    (curve-2 :type 'arc-curve
                             :center (translate (the center) :right 50)
                             :orientation (alignment :top (the (face-normal-vector :rear)))
                             :start-angle pi
                             :end-angle (* 5/4 pi)
                             :radius 10)
                           
                    (view :type 'base-view
                          :projection-vector (getf *standard-views* :trimetric)
                          :page-width (* 5 72) :page-length (* 5 72)
                          :object-roots (list self))))

 (generate-sample-drawing :objects (list-elements (the-object (make-object 'test-revolved-surfaces)
                                                              surfaces))
                          :projection-direction :trimetric)
                 
  @end cartouche 
@end smallexample



 @b{Example image is not generated!}

