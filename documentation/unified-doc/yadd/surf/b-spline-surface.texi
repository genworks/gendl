@subsubsection B-spline-surface

@b{Description}

A general b-spline surface specified with control points, weights, knots, and degree.

@noindent @b{Required-input-slots}

@b{:control-points}

@itemize {}

 @item List of lists of 3D Points. The control net.

@end itemize

@noindent @b{Optional-input-slots}

@b{:u-degree}

@itemize {}

 @item Integer. Degree of surface in U direction. Defaults to 3.

@end itemize

@b{:u-knot-vector}

@itemize {}

 @item List of Numbers. Knots in U direction. Default is NIL, which indicates a uniform knot vector in U direction.

@end itemize

@b{:v-degree}

@itemize {}

 @item Integer. Degree of surface in V direction. Defaults to 3.

@end itemize

@b{:v-knot-vector}

@itemize {}

 @item List of Numbers. Knots in V direction. Default is NIL, which indicates a uniform knot vector in V direction.

@end itemize

@b{:weights}

@itemize {}

 @item List of lists of numbers. A weight to match each control point. Should be congruent with control-points 
 (i.e. same number of rows and columns). Default is a value of 1.0 for each weight, resulting in a nonrational surface.

@end itemize



@noindent @b{Examples}

@smallexample 
@cartouche

 (in-package :surf)

 (define-object test-b-spline-surface (b-spline-surface)
  
   :computed-slots
   ((points-data '(((0 0 0)(4 1 0)(8 1 0)(10 0 0)(8 -1 0)(4 -1 0)(0 0 0))
                   ((0 0 2) (4 2 2) (8 2 2) (10 0 2) (8 -2 2) (4 -2 2) (0 0 2))
                   ((0 0 4) (4 2 4) (8 2 4) (10 0 4) (8 -2 4) (4 -2 4) (0 0 4))
                   ((0 0 7) (4 1 7) (8 1 7) (10 0 7) (8 -1 7) (4 -1 7) (0 0 7))))
    (control-points (mapcar #'(lambda(list) (mapcar #'apply-make-point list)) (the points-data)))
    (display-controls (list :color :periwinkle :line-thickness 2))))
  

 (generate-sample-drawing :object-roots (make-object 'test-b-spline-surface)
                          :projection-direction :trimetric)

@end cartouche 
@end smallexample



 @b{Example image is not generated!}

