@subsubsection Edge-blend-surface

@b{Description}

Creates a smooth blend-surface between curve-1, lying on surface-1 and curve-2 on surface-2. 

Note that curve-1 and curve-2 have to be so-called on-surface curves, which means they must answer a uv-curve message which is the UV representation of the curve on the given surface. The most common way to establish an on-surface curve is to use an iso-curve to begin with, or to use a projected-curve or dropped-curve to ensure that the curve is indeed an on-surface curve.

The local start and end directions of this surface at any point along curve-1 and curve-2 are determined from the cross-product between the tangent to the surface's u- or v-iso-curve (the one that is closest to being parallel to curve-1 or curve-2) at this point and the corresponding surface-normal at the same point. In this fashion a tangent blend is created between surface-1 and surface-2 that extends in a direction that follows and smoothly interpolates both surface's iso-curves. Takes the same inputs as general-dual-blend-surface, except for f-tangent-1 and f-tangent-2.

@noindent @b{Optional-input-slots}

@b{:curve-1-uv}

@itemize {}

 @item GDL UV curve object. Defaults to the curve-1 uv-curve.

@end itemize

@b{:curve-2-uv}

@itemize {}

 @item GDL UV curve object. Defaults to the curve-2 uv-curve.

@end itemize

@b{:curve-side-1}

@itemize {}

 @item Keyword. Used to specify the side w.r.t curve-1 in which the tangent blend-surface is to extend. Takes either :right-side or :left-side as input. Defaults to :right-side.

@end itemize

@b{:curve-side-2}

@itemize {}

 @item Keyword. Used to specify the side w.r.t curve-2 in which the tangent blend-surface is to extend. Takes either :right-side or :left-side as input. Defaults to :right-side.

@end itemize

@noindent @b{Computed-slots}

@b{:f-tangent-1}

@itemize {}

 @item Input-function. Parametric function defined from 0 to 1 that outputs the blend-surface's local direction vector along curve-1. The input value of 0 corresponds to the start of curve-1, 1 to the end of curve-1.

@end itemize

@b{:f-tangent-2}

@itemize {}

 @item Input-function. Parametric function defined from 0 to 1 that outputs the blend-surface's local direction vector along curve-2. The input value of 0 corresponds to the start of curve-2, 1 to the end of curve-2.

@end itemize

@noindent @b{Examples}

@smallexample 
@cartouche

 (in-package :surf)

 (define-object test-e-b-s (base-object)
  
  
  :objects
  ((e-b-s :type 'edge-blend-surface
          :display-controls (list :color :green)
          :curve-side-1 :left-side
          :curve-side-2 :left-side
          :pass-down (curve-1 surface-1 curve-2 surface-2))
                                    
   
   (surf-1-top :type 'linear-curve
               :hidden? t
               :start (make-point -5 -5 0)
               :end (make-point 5 -5 0))
    
   (surf-1-bottom :type 'linear-curve
                  :hidden? t
                  :start (make-point -7 -10 -2)
                  :end (make-point 7 -10 -2))
    
   (surface-1 :type 'ruled-surface
              :curve-1 (the surf-1-top)
              :curve-2 (the surf-1-bottom))
    
   (curve-1 :type 'iso-curve
            :display-controls (list :color :red :line-thickness 4)
            :surface (the surface-1)
            :parameter 0
            :u-or-v :v)
    
   (surf-2-bottom :type 'linear-curve
                  :hidden? t
                  :start (make-point -5 5 0)
                  :end (make-point 5 5 0))
    
   (surf-2-top :type 'linear-curve
               :hidden? t
               :start (make-point -7 10 2)
               :end (make-point 7 10 2))
    
   (surface-2 :type 'ruled-surface
              :curve-1 (the surf-2-bottom)
              :curve-2 (the surf-2-top))
    
   (curve-2 :type 'iso-curve
            :display-controls (list :color :blue :line-thickness 4)
            :surface (the surface-2)
            :parameter 0
            :u-or-v :v)))

 (generate-sample-drawing :object-roots (list (make-object 'test-e-b-s))
                           :projection-direction (getf *standard-views* :top))

 @end cartouche 
@end smallexample



 @b{Example image is not generated!}

