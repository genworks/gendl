@subsubsection Planar-section-curve

@b{Description}

Produces a single curve by sectioning a surface with a plane. If multiple results are expected,
use planar-section-curves instead.

@noindent @b{Required-input-slots}

@b{:surface}

@itemize {}

 @item GDL Surface, face, or trimmed surface. The surface to be sectioned with a plane.

@end itemize

@noindent @b{Optional-input-slots}

@b{:3d-approximation-tolerance}

@itemize {}

 @item Number. Tolerance used when approximating in e.g. Newton-Raphson iterations.
Default is *3d-approximation-tolerance-default*.

@end itemize

@b{:angle-tolerance-radians}

@itemize {}

 @item Number. Angular tolerance (in radians) used when approximating in e.g. Newton-Raphson iterations.
Default is *angle-tolerance-radians-default*.

@end itemize

@b{:plane-normal}

@itemize {}

 @item Vector. The normal of the sectioning plane. Defaults to the top vector of the local reference box.

@end itemize

@b{:plane-point}

@itemize {}

 @item 3D Point. A point on the sectioning plane. Defaults to the center.

@end itemize

@noindent @b{Computed-slots}

@b{:on-surfaces}

@itemize {}

 @item List of GDL surfaces. The surfaces on which this curve lies.

@end itemize

@b{:success?}

@itemize {}

 @item Boolean. This will be non-nil if the curve was generated successfully.

@end itemize



@noindent @b{Functions}

@b{:uv-curve}

@itemize {}

 @item GDL Curve object. The UV curve for this curve in the context of the surface.

:&optional (surface (the surface)) "GDL Surface object. The surface on which the UV curve lies."

@end itemize

@noindent @b{Examples}

@smallexample 
@cartouche

 (in-package :surf)

 (define-object test-planar-section-curve (base-object)
  
  :objects
  ((planar-section-curve :type 'planar-section-curve
                         :surface (the test-surf)
                         :plane-normal (the (face-normal-vector :top))
                         :plane-point (make-point 0 0 2)
                         :display-controls (list :color :red :line-thickness 4))
   
   (test-surf :type 'test-fitted-surface )))

 (generate-sample-drawing :object-roots (list (make-object 'test-planar-section-curve))
                           :projection-direction (getf *standard-views* :trimetric))

 @end cartouche 
@end smallexample



 @b{Example image is not generated!}

