@subsubsection Boxed-surface

@b{Description}

This object behaves as a hybrid of a surface and a normal box. You 
pass in a surface-in, and it essentially traps the surface in a box, which will respond to normal
GDL :center and :orientation. You can also pass a scale, or scale-x, or scale-y, or scale-z as with
a transformed-surface.

@noindent @b{Required-input-slots}

@b{:surface-in}

@itemize {}

 @item GDL Surface object. This can be any type of surface, e.g. b-spline-surface, fitted-surface, or an edge from a solid brep.
 Note that the reference-box of this surface (i.e. its center and orientation) will have an effect on the resulting
 boxed-surface. If you want to consider the incoming surface-in as being in global space, then make sure its center 
 is (0 0 0) and its orientation is nil or equivalent to geom-base::+identity-3x3+

@end itemize

@noindent @b{Optional-input-slots}

@b{:center}

@itemize {}

 @item 3D Point in global space. You can pass in a new center for the surface's reference box, 
which will move the whole box including the surface. This defaults to the 
orientation-center (if given), otherwise to the (the surface-in center).

@end itemize

@b{:from-center}

@itemize {}

 @item 3D Point in global space. The center with respect to which this object should be positioned. Normally
this should not be specified by user code, unless you know what you are doing [e.g. to override the center
of a surface-in which is meaningless and force it to be interpreted as a surface in global space, you could
specify this as (the center) when passing it in from the parent]. Default is (the surface-in orientation).

@end itemize

@b{:from-object}

@itemize {}

 @item GDL object which mixes in base-object. The current boxed-surface will be positioned and oriented with respect 
to the center and orientation of this object. The default is (the surface-in).

@end itemize

@b{:from-orientation}

@itemize {}

 @item 3x3 Transformation Matrix. The orientation with respect to which this object should be oriented. Normally
this should not be specified by user code, unless you know what you are doing [e.g. to override the orientation
of a surface-in which is meaningless and force it to be interpreted as a surface in the parent's coordinate system, 
you could specify this as (the orientation) when passing it in from the parent]. Default is (the surface-in orientation).

@end itemize

@b{:orientation}

@itemize {}

 @item 3x3 Transformation Matrix. This will be the new orientation for the box and the contained surface. Default is 
 (the surface-in orientation) -- i.e. identical orientation with the provided surface-in.

@end itemize

@b{:orientation-center}

@itemize {}

 @item 3D Point in global space. If you provide this, the surface's reference box will be moved to have its center
at this point, before any orientation is applied. This will become the new center of the resulting boxed-surface,
unless you explicitly pass in a different center. Default is nil.

@end itemize

@b{:scale}

@itemize {}

 @item Number. The overall scale factor for X, Y, and Z, if no individual scales are specified. Defaults to 1.

@end itemize

@b{:scale-x}

@itemize {}

 @item Number. The scale factor for X. Defaults to 1.

@end itemize

@b{:scale-y}

@itemize {}

 @item Number. The scale factor for Y. Defaults to 1.

@end itemize

@b{:scale-z}

@itemize {}

 @item Number. The scale factor for Z. Defaults to 1.

@end itemize

@b{:show-box?}

@itemize {}

 @item Boolean. This determines whether the reference box is displayed along with the surface. Default is nil.

@end itemize

@b{:show-control-polygon?}

@itemize {}

 @item Boolean. This determines whether the control polygon is displayed along with the surface. Default is t (will be changed to nil).

@end itemize

@b{:show-tight-box?}

@itemize {}

 @item Boolean. This determines whether the tight box is displayed along with the surface. Default is nil.

@end itemize

@noindent @b{Computed-slots}

@b{:control-points}

@itemize {}

 @item List of lists of 3D Points. The control net.

@end itemize

@b{:height}

@itemize {}

 @item Number. Z-axis dimension of the reference box. Defaults to zero.

@end itemize

@b{:length}

@itemize {}

 @item Number. Y-axis dimension of the reference box. Defaults to zero.

@end itemize

@b{:u-degree}

@itemize {}

 @item Integer. Degree of surface in U direction. Defaults to 3.

@end itemize

@b{:u-knot-vector}

@itemize {}

 @item List of Numbers. Knots in U direction. Default is NIL, which indicates a uniform knot vector in U direction.

@end itemize

@b{:v-degree}

@itemize {}

 @item Integer. Degree of surface in V direction. Defaults to 3.

@end itemize

@b{:v-knot-vector}

@itemize {}

 @item List of Numbers. Knots in V direction. Default is NIL, which indicates a uniform knot vector in V direction.

@end itemize

@b{:weights}

@itemize {}

 @item List of lists of numbers. A weight to match each control point. Should be congruent with control-points 
 (i.e. same number of rows and columns). Default is a value of 1.0 for each weight, resulting in a nonrational surface.

@end itemize

@b{:width}

@itemize {}

 @item Number. X-axis dimension of the reference box. Defaults to zero.

@end itemize



@noindent @b{Examples}

@smallexample 
@cartouche

 (define-object boxed-surfaces-test (base-object)
  
   ;;bounding-box-from-points gives errors  
  
   :objects
   ((b-spline :type 'test-b-spline-surface)
   
    (boxed :type 'boxed-surface
           :surface-in (the b-spline))
   
    (translated :type 'boxed-surface
                :surface-in (the b-spline)
                :center (translate (the center) :left 15))
   

   
   
    (twisted :type 'boxed-surface
             :surface-in (the boxed)
             :orientation (alignment :left (the (face-normal-vector :top))
                                     :rear (rotate-vector-d (the (face-normal-vector :rear))
                                                            30
                                                            (the (face-normal-vector :top)))))
   
   
    (rotated :type 'boxed-surface
             :surface-in (the b-spline)
             :display-controls (list :color :purple)
             :orientation (alignment :left 
                                     (rotate-vector-d (the (face-normal-vector :left))
                                                      50
                                                      (the (face-normal-vector :rear)))))
   
   
    (rotated-about :type 'boxed-surface
                   :surface-in (the b-spline)
                   :display-controls (list :color :purple)
                   :orientation-center (translate (the center) :right 2.5)
                   ;;:center (translate (the center) :up 5)
                   :orientation (alignment :left 
                                           (rotate-vector-d (the (face-normal-vector :left))
                                                            45
                                                            (the (face-normal-vector :rear)))))
   
   
    (moved-up :type 'boxed-surface
              :surface-in (the rotated-about)
              :center (translate (the rotated-about center) 
                                 :up 7
                                 :left 5))

   
    (straightened :type 'boxed-surface
                  :surface-in (the moved-up)
                  :orientation 
                  (alignment :left 
                             (rotate-vector-d (the-child surface-in (face-normal-vector :left))
                                              45
                                              (the-child surface-in (face-normal-vector :rear)))
                             :rear (the-child surface-in (face-normal-vector :rear))))
                                         
   
    (rotated-straightened :type 'boxed-surface
                          :surface-in (the straightened)
                          :orientation (the moved-up orientation)
                          :orientation-center (translate (the-child surface-in center) :up 2.5)
                          )
   
   
   
    (rotated-straightened-moved :type 'boxed-surface
                                :surface-in (the rotated-straightened)
                                :center (translate (the-child surface-in center) :right 5))
                               
   
    (center-sphere :type 'sphere :radius 0.3 :center (the moved-up-and-straightened orientation-center))
   
   
    (moved-up-and-straightened :type 'boxed-surface
                               :surface-in (the straightened)
                              
                               :center (translate (the-child orientation-center) :right 7)
                              
                               :orientation (alignment :left (the-child surface-in (face-normal-vector :rear))
                                                      
                                                       :front
                                                       (rotate-vector-d (the-child surface-in (face-normal-vector :left))
                                                                        45
                                                                        (the-child surface-in (face-normal-vector :rear))))
                              
                              
                               :orientation-center (translate (the straightened center) :up 2.5)
                               )
   
   
   
   
    (moved-up-and-straightened-1 :type 'boxed-surface
                                 :surface-in (the straightened)
                              
                                 :center (translate (the-child surface-in center) :right 14)
                              
                                 :orientation (the rotated-straightened orientation)
                              
                                 :orientation-center (translate (the straightened center) :up 2.5)
                                 )
   
    (moved-up-and-straightened-2 :type 'boxed-surface
                                 :surface-in (the straightened)
                              
                                 :center (translate (the-child surface-in center) :right 21)
                              
                                 :orientation (the rotated-straightened orientation)
                              
                                 :orientation-center (translate (the straightened center) :up 2.5)
                                 )
   
   
    (transformed :type 'boxed-surface
                 :surface-in (the b-spline)
                 :center (translate (the center) :left 50)
                 :orientation (alignment :rear 
                                         (rotate-vector-d (the (face-normal-vector :rear))
                                                          30
                                                          (the (face-normal-vector :right)))))))
@end cartouche 
@end smallexample



 @b{Example image is not generated!}

