@subsubsection Trimmed-surface

@b{Description}

Creates a surface which is trimmed by outer trimming loop curves (the ``island''), and one or more 
hole curves within the outer trimming loop. The curves can be input either as u-v curves or 3D curves.
If 3D curves are given, they must lie on the surface. If not, please use dropped-curve or projected-curve
to ensure that the curves lie on the surface.
<p>

Note that this object mixes in face, which mixes in surface. So this object should answer all the messages
of both face and surface. However, the local surface messages will operate on the basis, not on the trimmed 
representation. The messages for face will operate on the trimmed representation.

<p>
NOTE: the interface for this object is still under development so please stay apprised of any changes.

@noindent @b{Required-input-slots}

@b{:island}

@itemize {}

 @item Single GDL NURBS Curve or list of same. These curves make up the outer trimming loop. Normally should
be in counter-clockwise orientation; if not, please specify reverse-island? as non-NIL.

@end itemize

@noindent @b{Optional-input-slots}

@b{:basis-surface}

@itemize {}

 @item GDL NURBS Surface. The underlying surface to be trimmed.

@end itemize

@b{:holes}

@itemize {}

 @item List of GDL NURBS Curves or list of lists of GDL NURBS Curves. These curves make up zero or more holes within the outer trimming loop.
Normally should be in clockwise orientation; if not, please specify reverse-holes? as non-NIL.

@end itemize

@b{:reverse-holes?}

@itemize {}

 @item Boolean. Specify this as non-NIL if the holes are given in counter-clockwise orientation. Default is NIL.

@end itemize

@b{:reverse-island?}

@itemize {}

 @item Boolean. Specify this as non-NIL if the island is given in clockwise orientation. Default is NIL.

@end itemize

@b{:uv-inputs}

@itemize {}

 @item Boolean. NIL if feeding in 3D curves, non-NIL if feeding in UV curves.

@end itemize

@noindent @b{Computed-slots}

@b{:result-holes}

@itemize {}

 @item List of GDL 3D NURBS Curves or list of lists of GDL 3D NURBS Curves. These make up the inner holes of the resultant 
trimmed surface. If you specified holes as an input-slot, normally these should be the same
or very similar. If the trimmed surface was read in from an outside system through a translator such as IGES, 
the result-holes might return a non-NIL value while the island will always return NIL.

@end itemize

@b{:result-island}

@itemize {}

 @item Single GDL 3D NURBS Curve or list of GDL 3D NURBS Curves. These make up the outer trimming loop of the resultant 
trimmed surface. If you specified island as an input-slot, normally these should be the same
or very similar. If the trimmed surface was read in from an outside system through a translator such as IGES, 
the result-island should return a non-NIL value while the island will return NIL.

@end itemize

@noindent @b{Hidden-objects}

@b{:brep}

@itemize {}

 @item GDL Brep Object. The Brep containing the face corresponding to this trimmed surface.

@end itemize

@noindent @b{Examples}

@smallexample 
@cartouche

 (in-package :surf)
                  
 (define-object test-trimmed-surface-3 (trimmed-surface)
   :computed-slots
   ((reverse-holes? t)
    (island (the island-container ordered-curves))
    (holes (list (the hole ordered-curves)))
    (display-controls (list :color :periwinkle :line-thickness 2)))
  
   :hidden-objects
   ((basis-surface :type 'test-planar-surface
                   :display-controls (list :color :grey-light-very))
   
    (island-container :type 'global-filleted-polyline-curves
                      :default-radius .05
                      :vertex-list (list (make-point 0 0 0)
                                         (make-point 0.3 0.6 0)
                                         (make-point 0 1 0)
                                         (make-point 1 1 0)
                                         (make-point 1 0 0)
                                         (make-point 0 0 0)))
   
    (island-2 :type 'b-spline-curve 
              :control-points (list (make-point 0 0 0)
                                    (make-point 0 1 0)
                                    (make-point 1 1 0)
                                    (make-point 1 0 0)
                                    (make-point 0 0 0)))
   
    (hole :type 'global-filleted-polyline-curves
          :default-radius .05
          :vertex-list (list (make-point 0.5 0.5 0)
                             (make-point 0.75 0.5 0)
                             (make-point 0.75 0.75 0)
                             (make-point 0.5 0.75 0)
                             (make-point 0.5 0.5 0)))))

 (generate-sample-drawing :objects (make-object 'test-trimmed-surface-3)
                          :projection-direction :trimetric)


@end cartouche 
@end smallexample



 @b{Example image is not generated!}

