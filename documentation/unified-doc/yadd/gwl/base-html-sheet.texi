@subsubsection Base-html-sheet

@b{Description}

This mixin allows a part to be displayed as a web page in GWL. 
The main output can be specified either in a @i{write-html-sheet} function in the object which
mixes  this in, or in a @i{main-sheet} output-function in an html-format view of the 
object.

@noindent @b{Optional-input-slots}

@b{:check-sanity?}

@itemize {}

 @item Boolean. Determines whether a a sanity check is done (with the check-sanity function) before
 presenting the response page if this page is a respondent. Default is NIL.

@end itemize

@b{:return-object}

@itemize {}

 @item GDL object. Default object to which control will return with the write-back-link method

@end itemize

@b{:target}

@itemize {}

 @item String. Name of a browser frame or window to display this page. Default of NIL indicates to use the same window.

@end itemize

@b{:transitory-slots}

@itemize {}

 @item List of keyword symbols. Messages corresponding to form fields which should not be retained
against Updates to the model (e.g. calls to the update! function or hitting the Update button or link in 
the browser in development mode). Defaults to NIL (the empty list).

@end itemize





@noindent @b{Settable-computed-slots}

@b{:query-plist}

@itemize {}

 @item Plist. Contains submitted form field names and values for which no corresponding settable 
computed-slots exist. Where corresponding settable computed-slots exist, their values are set from 
the submitted form fields automatically.

@end itemize

@noindent @b{Computed-slots}

@b{:header-plist}

@itemize {}

 @item Plist. Extra http headers to be published with the URI for this page.

@end itemize

@b{:url}

@itemize {}

 @item String. The web address in the current session which points at this page. Published on demand.

@end itemize



@noindent @b{Functions}

@b{:after-present!}

@itemize {}

 @item Void. This is an empty function by default, but can be overridden in
the respondent of a form, to do some processing after the respondent's 
write-html-sheet function runs to present the object.

@end itemize

@b{:after-set!}

@itemize {}

 @item Void. This is an empty function by default, but can be overridden in
the requestor of a form, to do some processing after the requestor's form
values are set into the specified bashee.

@end itemize

@b{:before-present!}

@itemize {}

 @item Void. This is an empty function by default, but can be overridden in
the respondent of a form, to do some processing before the respondent's 
write-html-sheet function runs to present the object. This can be
useful especially for objects which are subclasses of higher-level mixins such as 
application-mixin and node-mixin, where you do not have
direct access to the write-html-sheet function and typically only define
the model-inputs function. It is not always reliable to do processing
in the model-inputs function, since some slots which depend on your
intended modifications may already have been evaluated by the time the
model-inputs function runs.

@end itemize

@b{:before-response!}

@itemize {}

 @item Void. This is an empty function by default, but can be overridden in
a user specialization of base-html-sheet, to do some processing before the 
header-plist is evaluated and before the HTTP response is actually initiated.

@end itemize

@b{:before-set!}

@itemize {}

 @item Void. This is an empty function by default, but can be overridden in
the requestor of a form, to do some processing before the requestor's form
values are set into the specified bashee.

@end itemize

@b{:check-sanity}

@itemize {}

 @item NIL or error object. This function checks the "sanity" of this object. By 
default, it checks that following the object's root-path from the root resolves
to this object. If the act of following the root-path throws an error, this error
will be returned. Otherwise, if the result of following the root-path does not
match the identity of this object, an error is thrown indicating this. Otherwise,
NIL is returned and no error is thrown. You can override this function to do what 
you wish. It should return NIL if the object is found to be "sane" and an throw
an error otherwise.

If check-sanity? is set to T in this object, this function will be invoked automatically
within an ignore-errors by the function handling the GWL "/answer" form action URI 
when this object is a respondent, before the main-sheet is presented.

@end itemize

@b{:process-cookies!}

@itemize {}

 @item Void. This is an empty function by default, but can be overridden in
a user specialization of base-html-sheet, to do some processing before the 
header-plist is evaluated and before the HTTP response is actually initiated, but after
the cookies-received have been set.

@end itemize

@b{:restore-form-controls!}

@itemize {}

 @item Void. Calls restore-defaults! on all the form-controls in this sheet.

@end itemize

@b{:sanity-error}

@itemize {}

 @item Void. Emits a page explaining the sanity error. This will be invoked instead of the write-main-sheet
if check-sanity? is set to T and the check-sanity throws an error. You may override this function to
do what you wish. By default a minimal error message is displayed and a link to the root object
is presented.

:arguments (error "an error object, presumably from the check-sanity function.")

@end itemize

@b{:select-choices}

@itemize {}

 @item Void. Writes an HTML Select field with Options.
:&key ((size 1) "Integer. determines size of selection list. Default of 1 is a pulldown menu."
       name "Keyword symbol or string. Determines the name of the field, which should probably match a settable computed-slot."
       keys "List of strings, numbers, or symbols. Values, the selected one of which will be returned as the value of the field."
       (values keys) "List of strings. Keys to display in the selection-list."
       tabindex "Integer. If given, this will generate the tabindex tag for this HTML input field.")

@end itemize

@b{:write-child-links}

@itemize {}

 @item Void. Creates a default unordered list with links to each child part of self.
The text of the links will come from each child's strings-for-display.

@end itemize

@b{:write-development-links}

@itemize {}

 @item Void. Writes links for access to the standard developer views of the object, currently consisting 
of an update (Refresh!) link, a Break link, and a ta2 link.

@end itemize

@b{:write-html-sheet}

@itemize {}

 @item Void. This GDL function should be redefined to generate the HTML page corresponding to this object.
It can be specified here, or as the main-sheet output-function in an html-format lens for this
object's type. This write-html-sheet function, if defined,  will override any main-sheet
function defined in the lens. Typically a write-html-sheet function would look as follows:

:example
<pre>
 (write-html-sheet
  ()
  (html (:html (:head (:title (:princ (the :page-title))))
               (:body ;;; fill in your body here

               ))))
</pre>

@end itemize

@b{:write-self-link}

@itemize {}

 @item Void. Emits a hyperlink pointing to self. Note that if you need extra customization
on the display-string (e.g. to include an image tag or other arbitrary markup), use with-output-to-string
in conjunction with the html-stream macro.

:&key ((display-string (the :strings-for-display)) "String. String to be displayed."
       (display-color nil) "Keyword symbol or HTML color string. Determines the color of the displayed link text. Default of NIL indicates web browser default (usually blue)."
       (target (the :target)) "String. Names a frame or window to open the link when clicked."
       (class nil) "String. Names a stylesheet class."
       (id nil) "String. Names a stylesheet id."
       (on-mouse-over nil) "String. Javascript code to run on mouse over."
       (on-mouse-out nil) "String. Javascript code to run on mouse out.")

@end itemize

@b{:write-standard-footer}

@itemize {}

 @item Void. Writes some standard footer information. Defaults to writing Genworks and Franz 
copyright and product links. Note that VAR agreements often require that you include a ``powered by'' 
link to the vendor on public web pages.

@end itemize







 @b{Example image is not generated!}

